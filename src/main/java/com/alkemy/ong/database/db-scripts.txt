CREATE DATABASE IF NOT EXISTS alkemyongdev;

//Contacts Table
CREATE TABLE contacts (
    id BIGINT AUTO_INCREMENT,
    name VARCHAR(50) NOT NULL,
    phone VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    message VARCHAR(50) NOT NULL,
    deleted BIT(1) NOT NULL,
    createdAt DATETIME(6) NOT NULL,
    updatedAt DATETIME(6) NOT NULL,
    PRIMARY KEY (id)
);

USERS TABLE

CREATE TABLE IF NOT EXISTS users (
  id_user BIGINT(20) NOT NULL AUTO_INCREMENT,
  created_at DATE NOT NULL,
  deleted BIT(1) NOT NULL,
  email VARCHAR(20) NOT NULL,
  first_name VARCHAR(30) NOT NULL,
  updated_at DATE NOT NULL,
  last_name VARCHAR(30) NOT NULL,
  password VARCHAR(8) NOT NULL,
  photo VARCHAR(30) NULL DEFAULT NULL,
  id_role BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (id_user),
  UNIQUE KEY unique_email (email)UNIQUE KEY unique_email (email),
 FOREIGN KEY (id_role)
 REFERENCES roles (id_role));
  );

CREATE TABLE IF NOT EXISTS ACTIVITIES (
id INT PRIMARY KEY AUTO_INCREMENT,
name VARCHAR(50) NOT NULL,
content VARCHAR(256) NOT NULL,
image VARCHAR(256) NOT NULL,
created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ,
updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
deleted BOOLEAN NOT NULL DEFAULT 0
);

CREATE TABLE IF NOT EXISTS members (
    id int NOT NULL AUTO_INCREMENT,
    name varchar(30) NOT NULL,
    facebook_url varchar(50),
    instagram_url varchar(50),
    linkedin_url varchar(50),
    image varchar(20) NOT NULL,
    description varchar(50) NOT NULL,
    deleted boolean NOT NULL,
    created_at timestamp NOT NULL default current_timestamp,
    updated_at timestamp NOT NULL default current_timestamp,
    CONSTRAINT PK_MEMBERS PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS `alkemyongdev`.`testimonials` (
  `id` INT PRIMARY KEY AUTO_INCREMENT,
  `name` VARCHAR(30) NOT NULL,
  `image` VARCHAR(100) NULL,
  `content` VARCHAR(200) NULL,
  `deleted` BIT(1) NULL,
  `created_at` timestamp default current_timestamp(),
  `updated_at` timestamp on update current_timestamp()
  );

CREATE TABLE IF NOT EXISTS Slide(idSlide INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    					idOrganization INT NOT NULL,
                        ordinalsNumber INT NOT NULL,
                        imageUrl VARCHAR(255) NOT NULL,
                        deleted boolean NOT NULL DEFAULT FALSE,
                        createdAt timestamp  NOT NULL,
                        updatedAt timestamp  NOT NULL,
                        text VARCHAR(140),
                        FOREIGN KEY (idOrganization) references Ong(idOrganization));

     CREATE TABLE IF NOT EXISTS `alkemyongdev`.`organizations` (
      `id` INT NOT NULL AUTO_INCREMENT,
      `name` VARCHAR(45) NOT NULL,
      `image` VARCHAR(45) NOT NULL,
      `address` VARCHAR(45) NULL,
      `phone` INT NULL,
      `email` VARCHAR(45) NOT NULL,
      `welcome_text` VARCHAR(45) NOT NULL,
      `about_us_text` VARCHAR(45) NULL,
      `created_at` TIMESTAMP(8) NULL,
      `updated_at` TIMESTAMP(8) NULL,
      `deleted` boolean  NOT NULL,
      `url_facebook` VARCHAR(45) NOT NULL,
      `url_linkedin` VARCHAR(45) NOT NULL,
      `url_instagram` VARCHAR(45) NOT NULL,
      PRIMARY KEY (`id`));

    CREATE TABLE IF NOT EXISTS roles (
          id_role BIGINT(20) NOT NULL AUTO_INCREMENT,
          created_at DATE NOT NULL,
          description VARCHAR(30) NULL DEFAULT NULL,
          last_modified DATE NOT NULL,
          name VARCHAR(15) NOT NULL,
          PRIMARY KEY (id_role));

  CREATE TABLE categories (
  	id int NOT NULL AUTO_INCREMENT,
  	name VARCHAR(45) NOT NULL,
    description VARCHAR(255),
    image VARCHAR(45),
  	deleted BIT NOT NULL DEFAULT 0,
    created_at DATETIME(6),
    updated_at DATETIME(6),
    PRIMARY KEY (id)
  );

CREATE TABLE IF NOT EXISTS comments (id_comment INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
					id_user BIGINT(20)  NOT NULL,
					id_news INT NOT NULL,
					body VARCHAR(140),
					deleted BOOLEAN NOT NULL DEFAULT FALSE,
                    created_at timestamp  NOT NULL,
                    updated_at timestamp  NOT NULL,
                    FOREIGN KEY (id_user) references users(id_user),
					FOREIGN KEY (id_news) references news(id));

CREATE TABLE IF NOT EXISTS news (
    id int NOT NULL AUTO_INCREMENT,
    id_category int NOT NULL,
    name varchar(30) NOT NULL,
    content text NOT NULL,
    image varchar(30) NOT NULL,
    deleted boolean NOT NULL default 0,
    created_at timestamp NOT NULL default current_timestamp,
    updated_at timestamp NOT NULL default current_timestamp,
    CONSTRAINT NEWS_PK PRIMARY KEY (id),
	FOREIGN KEY (id_category) references categories(id));